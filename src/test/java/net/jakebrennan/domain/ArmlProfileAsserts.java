package net.jakebrennan.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ArmlProfileAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArmlProfileAllPropertiesEquals(ArmlProfile expected, ArmlProfile actual) {
        assertArmlProfileAutoGeneratedPropertiesEquals(expected, actual);
        assertArmlProfileAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArmlProfileAllUpdatablePropertiesEquals(ArmlProfile expected, ArmlProfile actual) {
        assertArmlProfileUpdatableFieldsEquals(expected, actual);
        assertArmlProfileUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArmlProfileAutoGeneratedPropertiesEquals(ArmlProfile expected, ArmlProfile actual) {
        assertThat(expected)
            .as("Verify ArmlProfile auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArmlProfileUpdatableFieldsEquals(ArmlProfile expected, ArmlProfile actual) {
        assertThat(expected)
            .as("Verify ArmlProfile relevant properties")
            .satisfies(e -> assertThat(e.getWinRate()).as("check winRate").isEqualTo(actual.getWinRate()))
            .satisfies(e -> assertThat(e.getFeedRate()).as("check feedRate").isEqualTo(actual.getFeedRate()))
            .satisfies(e -> assertThat(e.getCallRate()).as("check callRate").isEqualTo(actual.getCallRate()))
            .satisfies(e -> assertThat(e.getRiiRate()).as("check riiRate").isEqualTo(actual.getRiiRate()))
            .satisfies(e -> assertThat(e.getFeedEV()).as("check feedEV").isEqualTo(actual.getFeedEV()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArmlProfileUpdatableRelationshipsEquals(ArmlProfile expected, ArmlProfile actual) {
        assertThat(expected)
            .as("Verify ArmlProfile relationships")
            .satisfies(e -> assertThat(e.getPlayerID()).as("check playerID").isEqualTo(actual.getPlayerID()));
    }
}
