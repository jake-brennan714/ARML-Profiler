package net.jakebrennan.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ArmlGameAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArmlGameAllPropertiesEquals(ArmlGame expected, ArmlGame actual) {
        assertArmlGameAutoGeneratedPropertiesEquals(expected, actual);
        assertArmlGameAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArmlGameAllUpdatablePropertiesEquals(ArmlGame expected, ArmlGame actual) {
        assertArmlGameUpdatableFieldsEquals(expected, actual);
        assertArmlGameUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArmlGameAutoGeneratedPropertiesEquals(ArmlGame expected, ArmlGame actual) {
        assertThat(expected)
            .as("Verify ArmlGame auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArmlGameUpdatableFieldsEquals(ArmlGame expected, ArmlGame actual) {
        assertThat(expected)
            .as("Verify ArmlGame relevant properties")
            .satisfies(e -> assertThat(e.getGameID()).as("check gameID").isEqualTo(actual.getGameID()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArmlGameUpdatableRelationshipsEquals(ArmlGame expected, ArmlGame actual) {
        assertThat(expected)
            .as("Verify ArmlGame relationships")
            .satisfies(e -> assertThat(e.getPlayers()).as("check players").isEqualTo(actual.getPlayers()));
    }
}
